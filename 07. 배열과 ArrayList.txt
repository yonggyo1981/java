배열
 - 연속적인 자료
 - 같은 자료형의 연속적인 자료
 - 물리적인 연속적인 자료
 - 배열에 선언한 갯수만큼 메모리에 연속적으로 생성
 
int[] nums = new int[4];
4개의 4byte 공간이 연속적으로 생성

short[] nums = new short[4];
4개의 2byte 공간이 연속적으로 생성 

배열의 선언과 초기화
자료형[] 배열이름 = new 자료형[갯수];
자료형 배열이름[] = new 자료형[갯수];

동일 자료형의 연속된 공간 

int[] nums = new int[4]; -> 동일 자료형 
int nums[] = new int[4];

int[] nums = new int[4];  4X4 =16bytes

long[] nums = new long[10]; 8byte X 10 = 80bytes 

배열 초기화
배열에 값을 처음 대입
int[] nums = new int[] { 10, 20, 30, 40 }; // 배열 공간이 4가 생성이되고, 값이 4개가 대입 

int[] nums = {10,20,30,40};

배열은 물리적 순서대로 이동
숫자 순서대로 물리적 이동 
[] -> 인덱스 번호 -> 물리적 위치로 이동(메모리 위치)

배열 속성 
	.length -> 배열의 물리적인 공간의 갯수
	
배열에서 가장 많이 사용되는 반복문 for 
순서가 정해져 있는 반복문 -> for 


배열은 물리적위치와 논리적 위치가 같다.

배열의 length -> 물리적 공간의 갯수, 실제 요소의 갯수 X
ArrayList -> 지정공간 -> 유동적으로 추가, 삭제, 변경 
            -> 실제 요소의 갯수를 체크하는 메서드(.size())
			
P206 
char - 정수
P207

0~25 // 26 


객체 배열 사용

Student[] list = new Student[100];  
// 인스턴스 100개가 아니라  참조자료형 Student의 인스턴스 주소가 저장될 메모리 공간 100개

int[] nums = new int[10];


Book[] library = new Book[4]; // Book인스턴스가 생성되면 인스턴의 주소가 저장될 Book 참조 자료형의 공간 4개가 생성 
현재 생성된 인스턴스가 없으므로 빈 공간!! -> null