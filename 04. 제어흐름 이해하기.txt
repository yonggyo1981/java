조건문

if (조건식) {  // 조건식 - 관계(비교)연산자 + 논리 연산자
	// 조건식이 참이면 수행이 되는 영역 
} else {
	// 조건식이 거짓일때 수행이 되는 영역
}

조건식이 여러개 있는 경우 
if (조건식1) { 
	// 조건식1이 참일때 수행이 되는 영역 
	
} else if (조건식2) {
   // 조건식1이 거짓, 조건식2가 참일때 
   
} else if (조건식3) {
	// 조건식1, 조건식2 거짓, 조건식3이 참 
} else {
   // 조건식1,... 조건식3까지 모든 조건이 거짓일때 수행 
}


P95 - 1분 복습
char gender = 'F';
1) if 
2) gender == 'F'
3) else 

P96

if (조건식1) 

else if (조건식2) 
	조건건식1이 거짓, 조건식2 참
else 

if (조건식1) {

}

if (조건식2) {
	조건식1 상관 없이 조건식가 참일때 수행 
}

P100
조건문과 조건 연산자(삼항 조건 연산자)

1분 복습
if (score >= 90)
	grade = 'A';
else 
	grade = 'B';
	
	
grade = (score >= 90)?'A':'B';

1) score >= 90
2) B

switch ~ case 
break
default 

주로 조건이 하나의 변수 값이나 상수 값으로 구분되는 경우 사용한다 
(관계(비교) - 동일 ==)
( >, <=  -> 적용 불가)
case에 매칭이된 후 하단으로 실행이 break를 만날때 까지 진행


자바 7버전 이전 -> switch case 에 문자열 매칭 X -> String.equals


문자 1개 char ch = 'A';
문자 여러개 String text = "ABCD"; == 
				(private final char[] value =''

P106 - 나혼자 코딩
5층 건물 
1층 -
2충 

int level = 5;

반복문
1. while
	while(조건식) { // 조건식 - 관계(비교) 연산자 + 논리연산자
		// 조건식이 참일때 반복되는 구간 
	}

	while(조건문 -> 항상 참) {
		// 반복 멈춤 - break;
		// 현재 반복 멈춤 -> 새로 시작 -> continue;(건너뛰기)
	}
	
2. do~while 
do-while {}안의 문장을 무조건 한번 수행 -> 조건식 검사 
do {
	// 조건식 참일때 반복 수행되는 부분 -> 무조건 한번은 실행
	(조건식이 false라도 적어도 1번은 실행 된다)
} while (조건식);


3. for
- 반복문 중에서 가장 많이 사용되는 반복문
for (초기화; 조건식; 증감식) {

}

int num = 1; // 초기화
while(조건식) {

	num++; 증감식
}

113 - 1분 복습
num이 1부터 10이 될 때까지 num 값을 증가하며 반복한다

for (int num = 1; num <= 10; num++) {....}

System.out.println
P114 - 나혼자 코딩 - 안녕하세요1 ~ 안녕하세요10 

for문을 자주 사용하는 이유
	 - 반복 횟수를 관리할 수 있기 때문
	 
for 문 요소 생략하기
1. 초기화식 생략

2. 조건식 생략 

3. 증감식 생략

4. 요소 모두 생략


중첩된 반복문
- 반복문 안에 반복문 
	 




