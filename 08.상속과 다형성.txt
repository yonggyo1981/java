1. 상속이란?
상위 클래스에서 하위 클래스로 상속 -> 상위 클래스에 있는 멤버 변수, 메서드 사용 가능하다

클래스 상속 문법 
	extends 

하위클래스 extends 상위클래스 {

}

B extends A 

A - numA, getNumA()

B - numA, getNumA() + numB, getNumB()

상속을 해준 클래스(부모클래스) A -> 일반적이고
상속을 받은 클래스(자식클래스) B -> 부모 클래스보다 구체적이다

사람 -> 영장류 -> 포유류 -> .... -> ... 
 구체적 <-----       ---> 일반적 

실버 -> 일반회원 - 적립율(1%)
VIP   -> VIP 회원 (일반회원 + 추가적인 내용)
	   ->  1) 제품 구매시 10% 할인 
			2) 보너스 포인트 5% 적립
			3) 담당 전문 상담원

일반회원 Customer (더 일반적) 
VIP   VIPCustomer (더 구체적 - Customer의 멤버 변수, 메서드 + VIPCustomer의 추가 멤버 변수, 추가 메서드)

상속 -> 기능의 확장, 재사용성이 높아진다

calcPrice -> 일반 고객 OK, VIP 맞지 않는 메서드
-> 동일한 메서드가 기능이 맞지 않아서 다시 작성하는 것 
-> 메서드 오버라이드
   (동일한 메서드명, 동일한 반환형, 동일한 매개변수 - 부모 클래스의 메서드가 대체)

super 예약어 - 부모 클래스의 인스턴스 주소, 부모클래스의 생성자

this 예약어 - 본인 클래스의 인스턴의 주소, 본인 클래스의 생성자

Customer 생성자 - 부모 클래스의 인스턴스가 먼저 생성(Customer())
VIPCustomer2 생성자 - 자식 클래스의 인스턴가 생성 

자식 클래스의 인스턴스를 생성 -> 부모클래스들이 자동으로 먼저 생성

private -> 정보은닉 -> protected 

super 
	1) 부모를 부르는 예약어
		부모 인스턴의 주소, 생성자 메서드


P247 - 1분복습 
1) 하위클래스가 생성될때는 상위클래스의 "생성자"가 먼저 호출
2) super();
3) super();


2. 상속에서 클래스 생성과 형 변환 
Customer vc = new VIPCustomer(); --> OK 
VIPCustomer vip = new Customer(); --> NOT OK

형변환된 vc가 가리키는 곳
Customer vc = new VIPCustomer(); --> OK 
VIPCustomer에서 접근 가능한 멤버변수와 메서드는 Customer에 정의되어 있는 것으로 한정


업캐스팅(하위 -> 상위 형변환)

포유류(Mammal) -- 영장류(Primate) - 인간(Human)
                      --- 호랑이(Tiger)

Primate aHuman = new Human();
(Human은 Primate의 모든 속성과 메서드를 소유 + a(Human에만 것)

3. 메서드 오버라이딩
	상위클래스의 정의핸 메서드를 하위클래스에서 재정의
	조건) 반환형, 메서드 이름, 매개변 수 갯수, 매개변수 자료형이 모두 같아 한다.
	
	조건의 실수를 방지하기 위해서 애노테이션
	@Override -> 맞지않는 재정의 메서드는 오류 발생 

	

5. 다형성 활용하기
	하위클래스가 상위 클래스 인스턴스로 변환
	클래스에 정의 되어 있는 멤버 변수 -> 인스턴스 생성시에 
	힙에 각 자료형 만큼 새로 생성
	
	멤버 변수는 -> 각 인스턴스 마다 독립적으로 값이 대입되므로 
	인스턴스 생성시 독립된 공간으로 생성
	
	메서드 -> 멤버 변수를 이용하여 기능 수행 
			-> 소스 자체가 변경 되지 않는다(외부에 입력된 데이터를 이용)
			
	
	Customer vc = new VIPCustomer(); 
	멤버변수와 메서드는 -> Customer에 정의된 범위 내에서만 호출
	호출되는 메서드는 생성된 인스턴스에 따라서 호출
	
	재정의된 calcPrice -> 현재 생성된 인스턴스인 VIPCustomer에 정의된 calcPrice
	
	Customer vc = new VIPCustomer(); 
	vc.calPrice  - 1) Customer 2)VIPCustomer
	
	다형성
		- 하나의 코드가 여러 자료형으로 구현되어 실행되는 것을 말합니다.
		(상속 관계)
		
		IS-A 
		Animal 
			- Human -> Animal 보다 구체적, 추가 메서드, 속성 
					Human 인스턴스, Animal 인스턴스
			- Tiger -> Animal 보다 구체적, 추가 메서드, 속성 
					Tiger 인스턴스, Animal 인스턴스 
			- Eagle -> Animal 보다 구체적, 추가 메서드, 속성 
					Eagle 인스턴스, Animal 인스턴스
					
					
		instanceof 
		
		
	
6. 다운캐스팅과 instanceof 
	상위 클래스 형 -> 하위 클래스형으로 형변환 -> 다운 캐스팅
	


생성자 메서드의 호출 이유? 
1) 인스턴스 생성
상위 클래스의 생성자가 먼저 호출 -> 상위클래스의 인스턴스가 내부적으로 먼저 생성
하위 클래스의 생성자가 다음에 생성 


다형성


Gold 그룹
제품 할인 10%
포인트 적립율  2%
전문상담원 X

P278 
Q1. extends 
Q2. super
Q3. 메서드 오버라이드

하위 클래스의 기본생성자 
super();


P232 ~279
정독 -> 예제 

그림 -> 힙에 생성되는 순서(멤버변수)
	   -> 메서드 영역 (데이터영역)






