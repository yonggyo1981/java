1. 상속이란?
상위 클래스에서 하위 클래스로 상속 -> 상위 클래스에 있는 멤버 변수, 메서드 사용 가능하다

클래스 상속 문법 
	extends 

하위클래스 extends 상위클래스 {

}

B extends A 

A - numA, getNumA()

B - numA, getNumA() + numB, getNumB()

상속을 해준 클래스(부모클래스) A -> 일반적이고
상속을 받은 클래스(자식클래스) B -> 부모 클래스보다 구체적이다

사람 -> 영장류 -> 포유류 -> .... -> ... 
 구체적 <-----       ---> 일반적 

실버 -> 일반회원 - 적립율(1%)
VIP   -> VIP 회원 (일반회원 + 추가적인 내용)
	   ->  1) 제품 구매시 10% 할인 
			2) 보너스 포인트 5% 적립
			3) 담당 전문 상담원

일반회원 Customer (더 일반적) 
VIP   VIPCustomer (더 구체적 - Customer의 멤버 변수, 메서드 + VIPCustomer의 추가 멤버 변수, 추가 메서드)

상속 -> 기능의 확장, 재사용성이 높아진다

calcPrice -> 일반 고객 OK, VIP 맞지 않는 메서드
-> 동일한 메서드가 기능이 맞지 않아서 다시 작성하는 것 
-> 메서드 오버라이드
   (동일한 메서드명, 동일한 반환형, 동일한 매개변수 - 부모 클래스의 메서드가 대체)

super 예약어 - 부모 클래스의 인스턴스 주소, 부모클래스의 생성자

this 예약어 - 본인 클래스의 인스턴의 주소, 본인 클래스의 생성자

Customer 생성자 - 부모 클래스의 인스턴스가 먼저 생성(Customer())
VIPCustomer2 생성자 - 자식 클래스의 인스턴가 생성 

자식 클래스의 인스턴스를 생성 -> 부모클래스들이 자동으로 먼저 생성

private -> 정보은닉 -> protected 

2. 상속에서 클래스 생성과 형 변환 
3. 메서드 오버라이딩
5. 다형성 활용하기
6. 다운캐스팅과 instanceof 



생성자 메서드의 호출 이유? 
1) 인스턴스 생성
상위 클래스의 생성자가 먼저 호출 -> 상위클래스의 인스턴스가 내부적으로 먼저 생성
하위 클래스의 생성자가 다음에 생성 


다형성