1. 프로그램 - 컴퓨터에게 일을 시키는 명령의 집합
2. 컴파일 - 실행 속도가 빠르다
   (프로그램 언어(사람이 인식할 수 있는 문장) -> 기계가 인식할 수 있는 언어)
   
   인터프리터 언어 -> 한줄 한줄 해석

3. 장점
플랫폼에 종속되지 않는 프로그램을 개발할 수 있다
C, C++ 컴파일러 (윈도우즈 컴파일러, 리눅스 컴파일러)

자바 코드 -> JVM (중간 언어 컴파일 .class) -> 플랫폼에 맞는 바이트코드
JVM (Java Virtual Machine)

객체 지향 언어
모든 프로그램이 클래스 형태로 구현되어 있다.


객체 - 여러 객체의 협력을 통해 프로그램을 구현하는 것 입니다.
(상호작용)

객체 -> 사물, 대상(Object)
게시판  - 게시판 관련 객체, 회원관련 객체
          - 게시글 작성 + 회원 데이터
		  - 게시글 조회(게시판 객체) + 회원의 접속권한(회원객체)
		  

프로그램이 안정적이다.
C, C++ - 메모리에 올리면, 프로그머가 적절하게 메모리에 제거
객체 -> 힙 -> 제거 프로그래머(메모리 누수... 성능 저하)

Java -> 메모리 관리를 자동관리(객체 --> 힙 --> 자동으로 제거)
		   가비지 콜렉터
		   
		  Person person1 = new Person();
		  Person person2 = new Person();
		  
		  person2 = person1;
		  
		  person2의 기존 인스턴스와 연결 X 
 
포인터를 사용하지 않는다


풍부한 기능을 제공하는 오픈 소스다
JDK - Java Development Kit 
오픈소스  - 15
8버전 
 
 
자바 사용 범위 
웹서버, 앱(안드로이드 앱), ...
데스톱 애플리케이션(java.awt, javax.swing

설치 

환경 변수 
JAVA_HOME  - 설치되어 있는 JDK 경로( C:\Program Files\Java\jdk-16.0.2 )
%JAVA_HOME%


CLASS_PATH = %JAVA_HOME%lib;.

에디터 - 이클립스
 
 
 src - 자바소스(.java)
 bin - 컴파일된 자바 클래스 파일(.class)
 
 java -> 컴파일된 class 파일을 실행하는 명령 프로그램 
 java 패키지명.파일명
 
 javac -> 컴파일하여 class 파일을 만드는 명령 프로그램
 
 
 
 
 세미콜론(;) -> 문장이 끝나는 지점에 위치
 
 주석 
 
 한줄 주석  //
 여러줄 주석 /* ~ */
 
 36P - 1분 복습 
 
 1)  //
 2) ;
 3) }
 
 객체 지향언어
 
 JVM 
 
 자바소스 -> JVM(.class 컴파일 - 중간 언어) -> 플랫폼에 맞는 바이트 코드로 변환
 
 JDK - Java Development Kit
 
 JRE - Java Runtime Eviron...(환경)
 
 first.second - 패키지
 hello3.java












