1. 객체 지향 프로그래밍과 클래스
	- 객체를 기반으로 하는 프로그램
	- Object(사물, 대상)
	- 상호작용
	- 사물, 대상 -> 속성
					-> 행위
	
	객체 -> 속성, 행위 -> 자료형
	 속성, 변수
     행위 - 함수, 메서드	 
					
	학생 ->  학번,       전송 
		->    20001425  교육학
			   20001426   체육 교육학
			   
	
	객체 정의하는 틀 -> 객체
	클래스               -> 인스턴스
	
	접근제어자 class 클래스명 {
		접근 제어자(public/protected/default/private) 자료형 변수명
		
		메서드
	}
	
	파일명과 동일한 클래스 -> public class 클래스명
	
	
	
	참고) package(패키지) 
		-> 같은 기능을 공유하는 클래스의 묶음
		-> 폴더(디렉토리)
		-> 하위 패키지 마침표(.) -> 하위 폴더로 생성
	
	
	접근제어자
		클래스명 
		변수명 
		메서드명
		
		public   - 내부, 외부 클래스에서 접근이 가능
		protected - 동일 패키지 내부, 외부(default) + 외부 상속시 -> 내부 접근만 가능(private)
		default(정의 X - package) - 동일 패키지 내부, 외부 접근이 가능
		private - 내부에서만 접근이 가능
		
		참고) import -> 외부 패키지를 사용할때 
		
		private > default > protected > public 

2. 클래스 살펴보기 - P130
	멤버 변수 
	접근제어자 자료형 변수명;
	자료형 - 기본자료형(공간이 정해져 있는 자료형 - byte, short, int, long, float, double ... boolean, char ...)
			 - 참조자료형(자원의 주소 값을 가지고 있는 자료형)
				- 클래스 자료형 
				- JDK 클래스, 사용자가 정의한 클래스 
				(String, Integer, Long, Date.... ArrayList)
	
				예) String text1 = "ABC";
			
3. 메서드 - 클래스에 정의된 함수
	접근제어자[예약어] 반환자료형 함수명 (매개변수1, 매개변수2... ) {
		// 매개변수로 뭔가를 처리하는 영역
		
		return "반환값"; 
	}
	
	반환값이 없는 경우 -> 반환 자료형 void 
	
	
	함수가 실행되는 영역
	(스택 메모리영역)
	
	지역변수 - 함수 영역 안에 정의되어 있는 변수
	전역변수 - 함수 지역 안에서 접근 가능한 외부 변수(상대적)
	P139
	
	이름짓기 규약 
	함수, 변수이름의 명명규칙 
	단어의 시작 문자 -> 대문자, 첫단어는 소문자
	int numberOfStudent 
	void showInfo() 
	
	카멜 케이스
	
	
	클래스명
	단어의 시작 문자 -> 대문자, 첫단어도 대문자
	class OrderProcess {
	
	}
	파스칼 케이스
	
	변수 중 상수 -> 대문자, 단어 사이는 _ 구분
	
4. 클래스와 인스턴스
	인스턴스를 생성하기 위한 정의(blueprint - 설계도)
	
	new 예약어 -> 인스턴스 생성
	클래스명(참조 자료형) 변수명 = new 클래스안에 정의되어있는 생성자 함수();
	
	정적 메모리(변화 X)
		- 데이터 영역
		
	동적 메모리(변화 O)
		- 스택 
		- 힙(new -> 생성)
			(제거 -> GC(가비지 콜렉터))
	
	
	정적-> 고정 되어 있다
		 -> 변하지 않는다
		 -> 공유
		 
		
5. 생성자	
	Student st1 = new Student();
	- 인스턴스를 생성하는 함수 -> 생성자
	- 반환값이 없는 함수 
	1) 인스턴스를 생성하기 위한 역할
	2) 멤버변수의 초기화
	
	-> 생성자 함수 -> 힙 영역에 인스턴스로 생성
	-> 따로 정의하지 않으면 -> 컴파일러가 자동으로 기본 생성자를 추가해 준다
	    (생성자가 하나도 없는 경우)
		
		
	3) 매개변수를 다르게 하여 동일 명칭의 생성자 정의 
		(생성자 오버로드)
	
6. 참조 자료형

7. 정보 은닉
	setter / getter 
	
	P167
	