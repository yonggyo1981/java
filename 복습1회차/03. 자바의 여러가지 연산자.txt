0. 항 
	1항 - 단항, 예) 증감 연산, ++num, num++
	2항 - 항이 2개 num1 + num2 
	3항 - 항이 3개 ->3항 조건 연산자
			(조건식)?"true일때":"false일때"
			
1. 대입연산자
	= (대입)
	
	int num = 10;
	int num = num1 + num2;
	
	연산의 결과로 가장 마지막에 대입 -> 연산자의 우선순위가 가장 낮다
	
2. 부호연산자
	+, - 
	- -> 반전 -> 음수 -> 양수, 양수 -> 음수
	
3. 산술연산자
	(+,-, *, /, % - 나머지 연산자)
	% -> 나머지 연산자
	
	우선순위 -> *, /, % 가 + - 연산보다 우선한다
	(  ) -> (10 + 20) * 30
	
	
4. 증가,감소 연산자
	++num; // num + 1;
	
	int num2 = ++num;  // 연산(num + 1) -> 대입 
	
	num++ 
	int num2 = num++; // 대입 -> 연산
	
	--num  // 연산(num - 1) -> 대입 
	num-- // 대입 -> 연산(num - 1)

5. 관계 연산자(비교 연산자)
	>, >=, <, <=, ==, != 
	
	=== -> 자바에서는 X 

6. 논리 연산자 - boolean
	&& - AND(논리곱) - 교집합
	||	  - OR (논리합) - 합집합
    !     - NOT(부정) - false -> true, true -> false
		
	우선순위
	
	논리 연산자 < 관계 연산자
	num1 > 10 AND num 1 < 100
	
	조건1(true) OR 조건2 .... 
	
	조건1(false) OR 조건2 
	
	조건1(false) AND 조건2 ... 
	
	참고) 
		자바스크립트 
		 || -> 기본값 
		 
7. 복합대입 연산자
	- 대입 연산자 + 다른 연산자(산순 연산자를 제일 많이 쓴다)
	
	int num = num + 2; // num += 2;
	int num = num * 2; // num *= 2;
	
8. 조건 연산자
	(3항 연산자, 3항 조건 연산자)
	(조건식)?"true 일때":"false 일때"
	
9. 비트 연산자
	이진수 연산 
	
	& -> 1, 1 -> 1
	|   -> 1,0 -> 1, 0,1 -> 1
	^(XOR) -> 같은 값(0,0, 1,1) -> 0, 다른 값(0,1, 1, 0) - 1
	
	~(반전) -> 1 -> 0, 0 -> 1
	
	<<, >>, >>>
	<< 2
	00000101
	00010100
	2^n 
	
	
	첫번째 비트 -> 부호 비트( 0 - 양수, 1 - 음수)
	>> 2
	00000101
	00000001	

	10000101	
	11000001
	* 1/2^n
	
	
	>>> 2 (부호 상관없이 0)
	00000101
	00000001
	
	
10. 연산자의 우선 순위 
1. 가장 높은 우선순위 
	( ), [] 
	(10 + 20) * 30
2. 관계(비교)연산자  >  논리연산자
	num > 10 && num < 100
	
3. 가장 낮은 우선순위
	대입 연산자

