1. this
	- 자신의 메모리(힙)를 가리키는 this 
	- 생성된 인스턴스 스스로를 가리키는 예약어
	- 클래스 내부에서 생성된 인스턴스(자신 스스로)
	 
	 Person person1 = new Person();
	 Person person2 = new Person();
	
	생성자에서 다른 생성자를 호출하는 this 
	this가 함수로 호출 -> 클래스 내부의 생성자
	- this를 호출하는 생성자 이전에 다른 코드를 추가 X
	
	자신의 주소를 반환하는 this
	
2. 객체 간 협력
   상호작용 
	
	학생  -- 버스 
	        -- 지하철
	
	
	학생 - 학생이름, 차비
			- 차비가 차감 
	버스 - 수익 증가 
	      - 승객의 수 증가 
		  
3. static 
	정적 - 공유
	속성 -> 각 인스턴스가 공유(속성 1개를 여러 인스턴스가 공유)
	메서드 -> 각 인스턴스가 공유
	
	정적 <--- ---> 동적(인스턴스 -> 힙)
	(고정, 변하지 X)
	데이터 영역
	
	클래스명.속성명 
	
	static 변수, 메서드 -> 생성 X -> 원래부터 처음 로딩 시 부터 데이터 영역에 존재
	
	static 메서드 안에서는 인스턴 변수 접근 할 수 X, static 변수만 접근이 가능
						static 메서드만 호출이 가능
	
	
	
	정적                    <--->  동적
	(static - 데이터 영역)       (멤버변수 -인스턴스 - 힙영역)
	
	정적변수 -> 클래스 변수
	
	static 메서드 -> 인스턴스 변수, 인스턴스 메서드 접근 불가.
	
	static 변수 = 정적 변수 = 클래스변수
	
	멤버변수 = 인스턴변수, 속성, 특성 ...
	
	int, long -> 선언 -> 기본값 0
	double, float -> 선언 -> 기본값 0.0
	참조 변수 선언 -> 기본값 null
	
	접근 제어자
	public - 외부 클래스 접근 가능, import 통해서 다른 패키지에서도 접근
	default(package) - 같은 패키지 내에서만 접근 가능
	protected - default + 상속을 받으면 다른 패키지의 외부 클래스에서 내부에서만 접근이 가능(private)
	private - 내부 클래스에서만 접근이 가능 
	


190  - 나혼자 코딩 

	

	
	
