1. 객체 지향 프로그래밍과 클래스
- 객체를 기반으로 하는 프로그램(OOP)
- 객체?
	(Object - 사물, 대상)
	- 사물과 대상간 상호작용
	
	클래스 정의 -> 객체의 틀 정의
		-> 객체의 속성과 기능 정의
		-> 특성, 함수 
		-> 멤버변수, 메서드
	
		-> 문법적인 부분
		
		(접근제어자) class 클래스 이름 {
			멤버변수
			
			메서드...
		}
		
		접근제어가
		public  - 외부 클래스에서 접근 가능, 다른 패키지의 클래스에서도 import를 통해 접근 가능
		protected - 동일 패키지에서는 외부 내부 접근 가능, 외부 패키지 -> 상속 -> private으로 접근 가능(내부에서만 접근이 가능)
		default(생략) - 동일 패키지 안에서만 내부, 외부 접근 가능 
		private - 내부 클래스에서만 접근 가능, 외부 X
		
		private < default < protected < public 
		
		클래스 앞의 접근제어자 
		
		클래스 파일명과 동일한 클래스명 -> public 을 붙인다.
		(외부 패키지에서 접근 가능하기 위해)
		
		클래스 이름 짓는 규칙
		-> 앞글자 -> 대문자, 단어가 여러개 일때 는 시작 단어의 첫글자를 대문자
		(파스칼케이스)
		
2. 클래스 살펴보기
3. 메서드
4. 클래스와 인스턴스
5. 생성자
6. 참조 자료형
7. 정보은닉