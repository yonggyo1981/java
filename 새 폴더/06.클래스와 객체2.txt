1. this 예약어
	1) 생성된 인스턴스의 주소(스스로)
		- 본인 클래스에서 본인 인스턴스를 가리킨다.
		- 클래스 내부에서 생성된 인스턴를 접근
	
		- 클래스 내부에서 생성자 호출
		
		(인스턴스 주소, 생성자)
		P174 - 16 return this;
		
2. 객체 간 협력
	(상호작용)
	사람과 밥
	
	Person 
		- stomach - 50g, 100g, 150g
		- oneSpool - 50g
	
	Rice 
		- amount - 150g
						100g
						50g
						0g
						
3. static 변수
   정적인(공유) 영역 -> 데이터 영역 
   -> static 예약어 -> 정적 변수 -> 공유 하는 변수
   -> 각 인스턴스마다 접근 하더라도 공통적으로 변경 -> 변수가 유일하게 하나의 공간에서 있다
   -> 공유 -> 1개만 존재
   -> 인스턴스 생성과 관련 없는 변수(생성시 복사 X)
   
	s1.serialNum  = 10;  -> 각각 
	s2.serialNum  = 20; -> 각각 
	
	-> 인스턴스 생성이 필요 X -> 클래스명으로 접근 할수 있다
	
	
	static 메서드 -> 정적 메서드
		-> 인스턴스 생성 없이 접근, 사용 가능
	
클래스(정적) 메서드와 인스턴스 변수

4. 변수 유효 범위 - 지역변수, 멤버변수, static 변수
P191
지역변수 - 함수 내에 정의되어 있는 변수
			 - 호출되면 스택에서 활성화, 종료 되면 스택에서 제거
			 - 함수 안에서만 유효

멤버변수 - 인스턴스가 생성되어야 활성화 되는 변수
             - 힙에 생성되는 변수
			 - 인스턴스가 참조 되지 않으면 가비지 콜렉터(GC)가 수거해가는 변수
			 
static 변수 - 프로그램이 로딩될때 가장먼저 초기화되는 변수(데이터 영역)

5. static 응용 - 싱글톤 패턴 

1개 인스턴스로 -> 공유 -> static 

1) 생성자를 private으로 만들기 
	-> 생성자 접근 가능 -> 인스턴스를 여러개 만들수 있는 가능성
	-> 생성자를 내부에서만 접근 가능(내부에서만 생성)

2) 클래스 내부에 static으로 유일한 인스턴스 생성하기(private)

3) 외부에서 참조할 수 있는 public 메서드 만들기(static)

P197 
Q1. this 
Q2. this
Q3. 클래스 변수(정적변수, static 변수)
Q4. 스택, 데이터 영역
